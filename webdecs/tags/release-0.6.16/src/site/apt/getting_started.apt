				---------------
				getting started
				---------------

getting started

demos

* csv filter demo

------------------------------------------------------------------------------------------------------------------------

        // creates a CSV parser for the input file
        Reader reader = new FileReader(FILE_NAME);
        CSVLineIterator src = new CSVLineIterator(reader, '|');

        // sets up a filtered iterator that uses the upper iterator as source
        Filter<String[]> filter = new RowFilter();
        FilteringIterator<String[]> iterator = new FilteringIterator<String[]>(src, filter);

        // create a CSV writer to save the rows that matched the filter
        Writer out = new BufferedWriter(new FileWriter("matches.csv"));
        DocumentWriter<Object[]> csvWriter = new ArrayCSVWriter(out, '|');

        // iterate the entries
        while (iterator.hasNext()) {
            String[] cells = iterator.next();
            csvWriter.writeElement(cells);
            matchCount++;
        }

        out.close();
        reader.close();

------------------------------------------------------------------------------------------------------------------------

* html spider demo

 This demo shows how to use the HTML tokenizers for iterating through a web page for extracting all links.

------------------------------------------------------------------------------------------------------------------------

        // Fetch the web page as stream
        Reader reader = IOUtil.getReaderForURI("http://www.yahoo.com");
        // build the filtering iterator structure
        HTMLTokenizer tokenizer = new DefaultHTMLTokenizer(reader);
        tokenizer = new FilteringHTMLTokenizer(tokenizer, new HTMLTokenFilter(HTMLTokenizer.START_TAG, "a"));
        // simply iterate the filter to retrieve all references of the page
        while (tokenizer.nextToken() != HTMLTokenizer.END)
            System.out.println(tokenizer.attributes().get("href"));
        // free resources
        reader.close();

------------------------------------------------------------------------------------------------------------------------

* html text extractor demo

  This demo shows how to extract and convert text from a web page by XSLT and Converters.
  We fetch the headlines from yahoo.com here:

------------------------------------------------------------------------------------------------------------------------

    // Fetch the web page as string
    String html = IOUtil.getContentOfURI("http://www.yahoo.com");

    // convert the page content to XML
    String xml = HTML2XML.convert(html);

    // load the XSLT script and execute it on the XML text
    String xslt = IOUtil.readTextResource("org/databene/webdecs/demo/HTMLTextExtractorDemo.xsl");
    String xsltResult = XSLTTransformer.transform(xml, xslt);
    System.out.println("XSLT result: " + xsltResult);

    // split the list by its s separator token |
    Converter<String, String[]> converter = new SplitStringConverter('|');
    String[] headlines = converter.convert(xsltResult);

    // print out the results
    System.out.println("Yahoo headlines:");
    System.out.println("----------------");
    for (int i = 0; i < headlines.length; i++)
        System.out.println((i+1) + ". " + headlines[i]);
    }

------------------------------------------------------------------------------------------------------------------------

 The XSLT file was this:

------------------------------------------------------------------------------------------------------------------------
<?xml version="1.0" encoding="iso-8859-1"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
    <xsl:output method="text"/>

    <xsl:template match="/">
        <xsl:for-each select="//div[@id='newstop']/a">
            <xsl:if test="position() > 1">|</xsl:if>
            <xsl:value-of select="."/>
        </xsl:for-each>
    </xsl:template>

</xsl:stylesheet>
------------------------------------------------------------------------------------------------------------------------

 And this was the resulting program output on 2007-06-19:

------------------------------------------------------------------------------------------------------------------------
Yahoo headlines :
- - - - - - - - -
1. Judge: Disbarred D.A. must leave now
2. U.S. attacks gunmen on Baghdad's flanks
3. Obama calls Clinton memo 'dumb mistake'
4. China's expanding deserts putting farmers at risk
5. Gay-rights groups encouraged by recent political gains in U.S.
6. More U.S. parents refusing to circumcise newborn boys
7. Distant planet likely too hot to sustain life, scientists say
8. U.S. Open
9. MLB
10. NASCAR
11. NBA
12. NFL
13. Soccer
------------------------------------------------------------------------------------------------------------------------
